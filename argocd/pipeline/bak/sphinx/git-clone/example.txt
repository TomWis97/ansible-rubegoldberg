#apiVersion: v1
#kind: Namespace
#metadata:
#  annotations:
#    openshift.io/description: "Fonzies space"
#  name: sscc-veldkamp-cx
#  labels:
#    project-zone/rivm-rti: ""
#
#---
apiVersion: v1
data:
  password: SF9HN1BaVGNOZE5zUDVuQTZab2c=
  username: cGlwZWxpbmV1c2Vy
kind: Secret
metadata:
  annotations:
    tekton.dev/git-0: https://gitlab.int.ssc-campus.nl
  name: pipelinekey
  namespace: sscc-veldkamp-cx
type: kubernetes.io/basic-auth

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline
  namespace: sscc-veldkamp-cx
secrets:
- name: pipelinekey

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: source-pvc
  namespace: sscc-veldkamp-cx
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs
  volumeMode: Filesystem

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pylint
  namespace: sscc-veldkamp-cx
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/categories: Code Quality
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: python, pylint
    tekton.dev/displayName: pylint
spec:
  description: >-
    This task will run pylint on the provided input.
  workspaces:
    - name: source
  params:
    - name: image
      description: The container image with pylint
      default: docker.io/cytopia/pylint@sha256:6e5b49b6d54cbd845b93139eeb3f4f558b07bf6a87001ce254782463df1443d2
    - name: path
      description: The path to the module which should be analysed by pylint
      default: "."
      type: string
    - name: requirements_file
      description: The name of the requirements file inside the source location
      default: "requirements.txt"
    - name: args
      description: The arguments to pass to the pylint CLI.
      type: array
      default: []
  steps:
    - name: pylint
      image: $(params.image)
      workingDir: $(workspaces.source.path)
      script: |
        export HOME=/tmp/python
        export PATH=$PATH:/tmp/python/.local/bin
        if [ -n "$(params.requirements_file)" ] && [ -e "$(params.requirements_file)" ];then
            python -mpip install --user -r $(params.requirements_file)
        fi
        pylint $@ $(params.path)
      args:
        - $(params.args)

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy
  namespace: sscc-veldkamp-cx
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: "main"
  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)
  - name: pylint
    params:
    - name: image
      value: docker.io/cytopia/pylint@sha256:6e5b49b6d54cbd845b93139eeb3f4f558b07bf6a87001ce254782463df1443d2
    - name: path
      value: wsgi.py
    - name: requirements_file
      value: requirements.txt
    - name: args
      value: []
    runAfter:
    - fetch-repository
    taskRef:
      kind: Task
      name: pylint
    workspaces:
    - name: source
      workspace: shared-workspace
  - name: s2i-python
    params:
    - name: VERSION
      value: 3.8-ubi8
    - name: PATH_CONTEXT
      value: .
    - name: TLSVERIFY
      value: "true"
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/pyapp:latest
    - name: BUILDER_IMAGE
      value: registry.redhat.io/rhel8/buildah@sha256:6a68ece207bc5fd8db2dd5cc2d0b53136236fb5178eb5b71eebe5d07a3c33d13
    runAfter:
    - pylint
    taskRef:
      kind: ClusterTask
      name: s2i-python
    workspaces:
    - name: source
      workspace: shared-workspace
  workspaces:
  - name: shared-workspace

---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: build-and-deploy
  namespace: sscc-veldkamp-cx
spec:
  params:
  - name: git-url
    value: https://gitlab.int.ssc-campus.nl/adm-veldkama/pyapp.git
  - name: git-revision
    value: main
  pipelineRef:
    name: build-and-deploy
  serviceAccountName: pipeline
  timeout: 1h0m0s
  workspaces:
  - name: shared-workspace
    persistentVolumeClaim:
      claimName: source-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: pyapp
    app.kubernetes.io/component: pyapp
    app.kubernetes.io/instance: pyapp
  name: pyapp
  namespace: sscc-veldkamp-cx
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: pyapp
  template:
    metadata:
      labels:
        deployment: pyapp
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/sscc-veldkamp-cx/pyapp
        imagePullPolicy: IfNotPresent
        name: pyapp
        ports:
        - containerPort: 8080
          protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pyapp
    app.kubernetes.io/component: pyapp
    app.kubernetes.io/instance: pyapp
  name: pyapp
  namespace: sscc-veldkamp-cx
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: pyapp

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: pyapp
    app.kubernetes.io/component: pyapp
    app.kubernetes.io/instance: pyapp
  name: pyapp
  namespace: sscc-veldkamp-cx
spec:
  host: pyapp-sscc-veldkamp-cx.apps.sscc.acc-int.containerhostingplatform.nl
  port:
    targetPort: 8080-tcp
  tls:
    termination: edge
  to:
    kind: Service
    name: pyapp
