---
- name: Create project
  awx.awx.project:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: Ansible-RubeGoldberg
    scm_url: https://github.com/TomWis97/ansible-rubegoldberg
    scm_type: git
  register: create_project_status
  retries: 5
  delay: 30
  until: create_project_status is not failed

    #- name: Configure Project
    #  uri:
    #    url: "{{ awx_api }}/api/v2/projects/"
    #    method: POST
    #    user: admin
    #    password: "{{ awx_admin_password }}"
    #    force_basic_auth: yes
    #    body_format: json
    #    status_code:
    #      - 200
    #      - 201
    #    body:
    #      name: Ansible-RubeGoldberg
    #      description: TomWis97's Ansible-RubeGoldberg repository
    #      local_path: ''
    #      scm_type: git
    #      scm_url: https://github.com/TomWis97/ansible-rubegoldberg
    #      scm_branch: ''
    #      scm_refspec: ''
    #      scm_clean: false
    #      scm_track_submodules: false
    #      scm_delete_on_update: false
    #      credential:
    #      timeout: 0
    #      organization: 1
    #      scm_update_on_launch: false
    #      scm_update_cache_timeout: 0
    #      allow_override: false
    #      default_environment:

- name: Create serviceaccount for AWX
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_location }}"
    namespace: "{{ awx_namespace }}"
    wait: yes
    state: present
    name: awx-access
    api_version: v1
    kind: ServiceAccount

- name: Grant SA cluster-admin permissions
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_location }}"
    apply: yes
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: awx-clusteradmin
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: awx-access
          namespace: "{{ awx_namespace }}"

- name: Grab name of Secret of SA
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_location }}"
    name: awx-access
    namespace: "{{ awx_namespace }}"
    api_version: v1
    kind: ServiceAccount
  register: sa_data

- name: Get token
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_location }}"
    name: "{{ item.name }}"
    namespace: "{{ awx_namespace }}"
    api_version: v1
    kind: Secret
  loop: "{{ sa_data.resources[0].secrets }}"
  when: "'token' in item.name"
  register: sa_token

- name: Create AWX Credential for SA
  no_log: true
  awx.awx.credential:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    credential_type: OpenShift or Kubernetes API Bearer Token
    description: "Token for AWX"
    name: awx-access
    inputs:
      host: "https://kubernetes.default.svc.cluster.local"
      verify_ssl: false
      bearer_token: "{{ item.resources[0].data.token | b64decode }}"
  when: "'resources' in item"
  loop: "{{ sa_token.results }}"

- name: Create Vault credential
  awx.awx.credential:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    credential_type: Vault
    description: "Key for inventory Vault"
    name: vault-key
    inputs:
      vault_password: "{{ lookup('file', './av_key') }}"

- name: Create inventory
  awx.awx.inventory:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: Ansible-RubeGoldberg
    description: Inventory in this GitHub repo

- name: Create inventory source
  awx.awx.inventory_source:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: github-repo
    description: From ansible-rubegoldberg project
    source: scm
    source_path: playbooks/inventory.yml
    source_project: Ansible-RubeGoldberg
    inventory: Ansible-RubeGoldberg
    update_on_project_update: yes

- name: Create GitOps Job Template
  awx.awx.job_template:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: GitOps
    description: Deploy and configure OpenShift GitOps
    allow_simultaneous: no
    credentials:
      - awx-access
      - vault-key
    inventory: Ansible-RubeGoldberg
    project: Ansible-RubeGoldberg
    playbook: playbooks/playbook_gitops.yml
    
- name: Create GitLab Job Template
  awx.awx.job_template:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: GitLab
    description: Configure GitLab
    allow_simultaneous: no
    credentials:
      - awx-access
      - vault-key
    inventory: Ansible-RubeGoldberg
    project: Ansible-RubeGoldberg
    playbook: playbooks/playbook_gitlab.yml
    
- name: Create OpenShift Configure Job Template
  awx.awx.job_template:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: OpenShift
    description: Configure OpenShift
    allow_simultaneous: no
    credentials:
      - awx-access
      - vault-key
    inventory: Ansible-RubeGoldberg
    project: Ansible-RubeGoldberg
    playbook: playbooks/playbook_openshift.yml

- name: Create Finish Job Template
  awx.awx.job_template:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: Finish
    description: Finish Ansible-RubeGoldberg
    allow_simultaneous: no
    credentials:
      - awx-access
      - vault-key
    inventory: Ansible-RubeGoldberg
    project: Ansible-RubeGoldberg
    playbook: playbooks/playbook_finish.yml

- name: Create Workflow Template
  awx.awx.workflow_job_template:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    name: Run Ansible-RubeGoldberg
    schema:
      - unified_job_template:
          name: "Ansible-RubeGoldberg"
          type: project_update
          organization:
            name: Default
        identifier: Update project
        related:
          success_nodes:
            - identifier: "1 OpenShift"
          failure_nodes: []
          always_nodes: []
          credentials: []
      - unified_job_template:
          name: OpenShift
          description: "Configure OpenShift"
          type: job
          organization:
            name: Default
        identifier: "1 OpenShift"
        related:
          success_nodes:
            - identifier: "2 GitOps"
          failure_nodes: []
          always_nodes: []
          credentials: []
      - unified_job_template:
          name: GitOps
          description: "Deploy and configure OpenShift GitOps"
          type: job
          organization:
            name: Default
        identifier: "2 GitOps"
        related:
          success_nodes:
            - identifier: "3 GitLab"
          failure_nodes: []
          always_nodes: []
          credentials: []
      - unified_job_template:
          name: GitLab
          description: "Configure GitLab"
          type: job
          organization:
            name: Default
        identifier: "3 GitLab"
        related:
          success_nodes:
            - identifier: "4 Finish"
          failure_nodes: []
          always_nodes: []
          credentials: []
      - unified_job_template:
          name: Finish
          description: "Finish Ansible-RubeGoldberg"
          type: job
          organization:
            name: Default
        identifier: "4 Finish"
        related:
          success_nodes: []
          failure_nodes: []
          always_nodes: []
          credentials: []

- name: Start Workflow Template
  awx.awx.workflow_launch:
    validate_certs: false
    controller_host: "{{ awx_api }}"
    controller_username: admin
    controller_password: "{{ awx_admin_password }}"
    organization: Default
    workflow_template: "Run Ansible-RubeGoldberg"
    wait: True
  register: start_workflow_template_status
  retries: 3
  delay: 120
  until: start_workflow_template_status is not failed


