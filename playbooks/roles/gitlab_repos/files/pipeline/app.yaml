apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: website
      app.kubernetes.io/component: website
      app.kubernetes.io/instance: website
    name: website
    namespace: sphinx
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: website
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: website
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/sphinx/website@sha256:f745059ac0796a368798e0d779200e03802b5af6ae915590d4b9456719a0ad9d
          imagePullPolicy: IfNotPresent
          name: website
          ports:
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: website
      app.kubernetes.io/component: website
      app.kubernetes.io/instance: website
    name: website
    namespace: sphinx
  spec:
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deployment: website
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: website
      app.kubernetes.io/component: website
      app.kubernetes.io/instance: website
    name: website
    namespace: sphinx
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: website
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
