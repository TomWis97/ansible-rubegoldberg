---
- block:
    - name: Create temp directory for repo
      tempfile:
        state: directory
        suffix: tmprepo
      register: tmpdir

    # I'm really sorry for those command modules. But ansible.builtin.git doesn't do what I need it to...
    - name: Clone repository
      command:
        argv:
          - git
          - clone
          - "https://root:plschange@gitlab.apps.{{ ocp_clustername }}.{{ ocp_basedomain }}/ansible-rubegoldberg/{{ item }}.git"
          - "{{ tmpdir.path }}"
      environment:
        - GIT_SSL_NO_VERIFY: "true"

    - name: Copy files over
      copy:
        dest: "{{ tmpdir.path }}"
        src: "{{ item }}/"
      register: copy_state

    - name: Configure Git name and e-mail
      command:
        chdir: "{{ tmpdir.path }}"
        argv:
          - git
          - config
          - "--local"
          - "{{ setting.field }}"
          - "{{ setting.value }}"
      loop_control:
        label: "{{ setting.field }}"
        loop_var: setting
      loop:
        - field: user.email
          value: someuser@localhost.local
        - field: user.name
          value: Fancy Ansible Playbook

    - name: Get changed files
      command:
        chdir: "{{ tmpdir.path }}"
        argv:
          - git
          - diff
          - --name-only
      register: git_diff

    - name: Determine if commit and push is required
      set_fact:
        commit_required: "{% if git_diff.stdout == '' %}{{ true | bool }}{% else %}{{ false | bool }}{% endif %}"

    - name: Set branch
      ignore_errors: true
      command:
        chdir: "{{ tmpdir.path }}"
        argv:
          - git
          - switch
          - "-c"
          - main

    - name: Commit changes in git
      when: commit_required == true
      block:
      - name: Stage files
        command:
          chdir: "{{ tmpdir.path }}"
          argv:
            - git
            - add
            - --all

      - name: Commit new files
        command:
          chdir: "{{ tmpdir.path }}"
          argv:
            - git
            - commit
            - -m
            - "Useless commitmessage."

      - name: Push files
        command:
          chdir: "{{ tmpdir.path }}"
          argv:
            - git
            - push
            - -u
            - origin
            - main
        environment:
          - GIT_SSL_NO_VERIFY: "true"

  always:
    - name: Clean up tempdir
      file:
        path: "{{ tmpdir.path }}"
        state: absent
    
