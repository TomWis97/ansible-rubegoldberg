---
- name: Create image registry PVC
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_location | default(omit) }}"
    username: "{{ openshift_user | default(omit) }}"
    password: "{{ openshift_password | default(omit) }}"
    wait: yes
    apply: yes
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: registry-storage
        namespace: openshift-image-registry
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: ocp-registry
        volumeMode: Filesystem
        resources:
          requests:
            storage: "{{ pvs['ocp-registry']['size_gb'] }}Gi"

- name: Configure image registry
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_location | default(omit) }}"
    username: "{{ openshift_user | default(omit) }}"
    password: "{{ openshift_password | default(omit) }}"
    wait: yes
    apply: yes
    definition:
      apiVersion: imageregistry.operator.openshift.io/v1
      kind: Config
      metadata:
        name: cluster
      spec:
        managementState: Managed
        replicas: 1
        rolloutStrategy: Recreate
        storage:
          claim: registry-storage

            #- name: Configure custom console URL
            #  kubernetes.core.k8s:
            #    kubeconfig: "{{ kubeconfig_location | default(omit) }}"
            #    username: "{{ openshift_user | default(omit) }}"
            #    password: "{{ openshift_password | default(omit) }}"
            #    wait: yes
            #    apply: yes
            #    definition:
            #      apiVersion: operator.openshift.io/v1
            #      kind: Console
            #      metadata:
            #        name: cluster
            #      spec:
            #        route:
            #          hostname: "console.{{ ocp_clustername }}.{{ ocp_basedomain }}"

- name: Configure htpasswd authentication
  when: ocp_htpasswd is defined
  block:
  - name: Create htpasswd secret
    kubernetes.core.k8s:
      kubeconfig: "{{ kubeconfig_location | default(omit) }}"
      username: "{{ openshift_user | default(omit) }}"
      password: "{{ openshift_password | default(omit) }}"
      wait: yes
      apply: yes
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: htpasswd-data
          namespace: openshift-config
        data:
          htpasswd: "{{ ocp_htpasswd | b64encode }}"
  - name: Create htpasswd secret
    kubernetes.core.k8s:
      kubeconfig: "{{ kubeconfig_location | default(omit) }}"
      username: "{{ openshift_user | default(omit) }}"
      password: "{{ openshift_password | default(omit) }}"
      wait: yes
      apply: yes
      definition:
        apiVersion: config.openshift.io/v1
        kind: OAuth
        metadata:
          name: cluster
        spec:
          identityProviders:
          - name: htpasswd
            type: HTPasswd
            mappingMethod: claim
            htpasswd:
              fileData:
                name: htpasswd-data
  - name: Grant cluster-admin permissions
    kubernetes.core.k8s:
      kubeconfig: "{{ kubeconfig_location | default(omit) }}"
      username: "{{ openshift_user | default(omit) }}"
      password: "{{ openshift_password | default(omit) }}"
      wait: yes
      apply: yes
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: htpasswd-admin
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: User
          name: admin

