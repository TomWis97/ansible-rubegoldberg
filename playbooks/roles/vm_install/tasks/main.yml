---
- name: Create VM
  tags:
  - new_install
  block:
  - name: Create disk image
    command:
      cmd: 'qemu-img create -f qcow2 "{{ vm_disk_location }}-os.qcow2" {{ vm_disk_size }}'
      creates: '{{ vm_disk_location }}-os.qcow2'

  - name: Create disk images for PVs
    command:
      cmd: 'qemu-img create -f qcow2 "{{ vm_disk_location }}-{{ item.key }}.qcow2" {{ item.value.size_gb }}G'
      creates: '{{ vm_disk_location }}-{{ item.key }}.qcow2'
    loop: "{{ pvs | dict2items }}"

  - name: Create virtual machine
    community.libvirt.virt:
      command: define
      xml: "{{ lookup('template', 'vm.xml.j2') }}"

  - name: Turn on VM
    community.libvirt.virt:
      command: start
      name: "{{ ocp_clustername }}.{{ ocp_basedomain }}"

        #- name: Wait for SSH to accept connections
        #  delegate_to: "api.{{ ocp_clustername }}.{{ ocp_basedomain }}"
        #  remote_user: core
        #  ansible.builtin.wait_for_connection:
        #    timeout: 300

        #- name: Configure hostname on VM
        #  delegate_to: "api.{{ ocp_clustername }}.{{ ocp_basedomain }}"
        #  remote_user: core
        #  delay: 2
        #  retries: 60
        #  become: True
        #  # Hostname module is not supported in RHCOS. So hopefully this will do.
        #  command: hostnamectl set-hostname sno.{{ ocp_clustername }}.{{ ocp_basedomain }}
        #  #ansible.builtin.hostname:
        #  #  name: "sno.{{ ocp_clustername }}.{{ ocp_basedomain }}"

- name: Wait for OpenShift API to become ready
  kubernetes.core.k8s_info:
    api_version: "config.openshift.io/v1"
    kubeconfig: "{{ kubeconfig_location }}"
    kind: clusterversions
  register: api_status
  until:
    - "'resources' in api_status"
    - "api_status['resources'] | length > 0"
    - "'status' in api_status['resources'][0]"
    - "(api_status['resources'][0]['status']['conditions'] | selectattr('type', 'search', 'Available') | list | first).status == 'True'"
  retries: 60
  delay: 60
  tags: wait_for

  #- name: Create hostname machineconfig
  #  kubernetes.core.k8s:
  #    kubeconfig: "{{ kubeconfig_location | default(omit) }}"
  #    username: "{{ openshift_user | default(omit) }}"
  #    password: "{{ openshift_password | default(omit) }}"
  #    wait: yes
  #    apply: yes
  #    definition: "{{ lookup('template', 'mc-hostname.yaml') }}"
